services:
  postgres:
    container_name: postgres-pam
    image: postgres:17.5
    environment:
      POSTGRES_USER: /run/secrets/db_set_user
      POSTGRES_PASSWORD: /run/secrets/db_set_pass
      POSTGRES_DB: /run/secrets/db_set_db
    secrets:
      - db_set_user
      - db_set_pass
      - db_set_db
    ports:
      - "5432:5432"
    networks:
      - academia
    restart: unless-stopped
    healthcheck: # Healtcheck para asegurarse que la DB funcione antes que se levante la app, para evitar fallos de conexión
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  AppDocker:
    container_name: academianovit
    depends_on:
      postgres:
        condition: service_healthy # Es necesario que el healthchek sea aprobado para que esta condición sea true y pueda arrancar la app
    image: ghcr.io/pamela-guevara/academianovit:1.0.1
    ports:
      - "5010:8080"
    restart: unless-stopped
    pull_policy: always
    networks:
      - academia
    environment:
      DB_CONNECTION_STRING_FILE: /run/secrets/db_conn_string
    secrets:
      - db_conn_string

secrets:
  db_conn_string:
    file: ./secrets/db_conn_string.txt
  db_set_user:
    file: ./secrets/db_set_user.txt
  db_set_pass:
    file: ./secrets/db_set_pass.txt
  db_set_db:
    file: ./secrets/db_set_db.txt

networks:
  academia:
    external: true
